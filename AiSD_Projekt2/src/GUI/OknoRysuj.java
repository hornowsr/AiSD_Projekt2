/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Struktury.BazaMiast;
import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author kuzniarg
 */
public class OknoRysuj extends javax.swing.JPanel {

    /**
     * Creates new form OknoRysuj
     */
    public OknoRysuj() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 535, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void rysuj(BazaMiast baza) {
        this.czysc();
        int n = baza.liczbaMiast();
        Graphics g = getGraphics();
        g.setColor(Color.black);


        if (n == 1) {
            this.zaznaczMiasto(this.getWidth() / 2, this.getHeight() / 2);
            return;
        }

        double kat = 360 / n;
        System.out.println(getWidth() + " " + getHeight());
        for (int i = 0; i < n; i++) {
            this.zaznaczMiasto(wyznaczX(kat * i), wyznaczY(kat * i));
            System.out.println("X: " + wyznaczX(kat * i) + " |Y: " + wyznaczY(kat * i));
        }
        
    }

    private void czysc() {
        Graphics g = getGraphics();
        g.setColor(Color.white);
        g.fillRect(0, 0, getWidth(), getHeight());
    }

    private void zaznaczMiasto(int x, int y) {
        Graphics g = getGraphics();
        g.setColor(Color.blue);
        g.fillOval(x, y, 10, 10);
    }

    private int promien() {
        if (this.getWidth() < this.getHeight()) {
            return this.getWidth() / 2 - 20;
        } else {
            return this.getHeight() / 2 - 20;
        }
    }

    private int wyznaczX(double kat) {
        return (this.getWidth() / 2) + (int) (promien() * Math.sin(Math.PI * kat / 180));
    }

    private int wyznaczY(double kat) {
        return (this.getHeight() / 2) - (int) (promien() * Math.cos(Math.PI * kat / 180));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
